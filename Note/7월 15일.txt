LAN들을 서로 연결 - 인터넷

massively multiplayer online (MMO) - 대규모 다중 사용자 온라인

초기모바일 네트워크 게임은 비동기식 구현이 주를 이루었다
	- 유선망 품질에 비해 무선망이 형편없었기 때문
	
게임서버의역할
	- 게임루프중 업데이트 일부를 떼어 내어 실행
		- 처리에 대한 판정을 서버가 한다
		아이템 획득과 같은 클라이언트에서 해킹 당하면 안되는 처리
		플레이어 데이터 저장
		여러 사용자 간의 행동을 중재해 결과 판정
			- 판정과 데이터 관련부분은 전부 서버가 관리한다
			
네트워크 토폴로지
여러 컴퓨터가 네트워크 상 연결되어 있는 형태 -> 컴퓨터끼리 어떻게 연결시킬건지 말함
	- 클라이언트-서버
		- 가장 대중적인 구조
		- 권한 집중형으로 서버라 불리는 컴퓨터가 모든 행동에 대한 판정내림
		- 데디케이티드서버
			- 업체가 고성능 컴퓨터를 이용해 서비스
		- 리스닝서버(피어호스팅)
			- 플레이어가 직접 서비스
	
	- 피어 투 피어
		- 모든 컴퓨터끼리 서로 접속
		- 판정권한 불분명
		- 보편적으론 각 피어마다 입력을 서로 공유 -> 각자가 입력을 스스로 시뮬레이션
			- 실시간으로 보여지는 것 처럼 보이지만 사실 큐에 입력을 쌓아놓고 일정시간이 되면 서로 입력을 보내고 도착하면 입력이 하나씩 실행되는 형식 우리눈엔 실시간으로 진행되는것처럼 보인다
	
	락스텝동기화?

게임 플레이 네트워킹
	모든연산을 서버가 부담
		- 클라이언트는 단순히 입력 전달과 화면 출력
		- 서버에서 로직연산, 화면 렌더링, 송출까지 부담
		- 요즘엔 안쓴다
			기술의 발전으로 스테디아, 지포스나우등 클라우드게이밍으로 재탄생
			
	렌더링을 클라이언트에서 하기
		- 보편적인방법
		- 서버는 클라이언트에게 게임월드상태를 보내어 렌더링하게함
		- 이동, 채팅은 서버가 클라이언트로부터 메시지를 받아 진행
			> 메시지: 네트워크상에서 보내지는 데이터
			
유니티 
오디오관련
	리스너
	소스