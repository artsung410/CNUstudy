unity manual 적극 활용
> 사이트 바로가기: https://docs.unity3d.com/Manual/index.html
에셋: unity프로젝트에서 게임이나 앱을 만드는데 사용하는 모든 아이템
	- 씬 또한 에셋이라 볼 수 있다.
photon: 네트워크 솔루션
NGUI: ui솔루션중하나
유니티에디터에서 제공하는 UI솔루션은 uGUI다.

컴포넌트패턴
유니티의 모든 컴포넌트는 MonoBehaviour클래스를 상속한다
때에 따라서는 구현을위해 유니티와 독립적으로 동작하는 객체가 필요할수도있다 그땐 위 클래스 상속은 필요없다.
유니티 컴포넌트 제어 방법은 메시지
메시지를 무차별적으로 여러 오브젝트에 동시에 뿌리는 방법을 브로드캐스팅이라한다.
메시지방식 특징
	- 메시지 보내는 쪽은 누가 받을지 신경안쓴다
	- 메시지 받은 쪽은 누가 보냈는지 신경안쓴다
	- 메시지에 명시된 기능을 가지고있으면 실행, 없으면 무시
	
이벤트 함수의 실행순서
Initialization
: 씬에 추가된 모든 오브젝트에대해 start, update등 이전에 호출된 모든 스크립트를 위한 awake, enable함수가 호출된다. 따라서 게임플레이도중 오브젝트를 인스턴스화 될 때는 실행되지 않는다.
	- Awake
		- 모든 오브젝트 초기화 되고 호출
			> 다른 스크립트와 연결을 보장
			> 다른 스크립트들을 많이 참조할수록 awake사용을 권장
		- 항상 Start()전에 호출
		- 프리팹의 인스턴스화 직후에 호출
	- OnEnable
		- 오브젝트가 활성화된 경우에만
		- 오브젝트 활성화 직후 호출
Editor
Initialization
	- Start
		- 스크립트 인스턴스가 활성화 된 경우에만 첫번째프레임의 업데이트 전에 호출
		- 모든 초기화가 끝난 후 다음 순서로 실행할 필요가 있는 작업에 사용
Physics
Input events
Game logic
	- fixed Update
		- 물리계산 업데이트, Ray처리에 주로 사용
		- 프레임속도가 낮은 경우 프레임당 여러번 호출가능
		- 함수 호출간격이 일정하도록 보장
		- fixed update의 움직임계산을 적용할때 time.deltatime 연산 필요없다
	- update
		- 일반적인 게임 업데이트
	- late Update
		- 카메라 관련 계산
Secen rendering
Gizmo rendering
GUI rendering
End of frame
Pausing
Decommissioning
	- OnDisable
	- OnDestroy
컴포넌트패턴?
이벤트함수주기

float의 계산속도가 제일 빠르다.
c#에선 숫자 쓸때 float타입으로 
c# 문자는 기본 utf-16지원하고 2byte크기를 가진다.
문자열
	- System.String으로 제공
	- 불변타입이다
		- 항상 새로운 인스턴스를 생성
		- 수정을 한다면 새로 문자열을 만든다
			> 성능에 주의한다
	- 문자열 보간을 이용하면 편하게 형식화된 문자열을 만들수있다
		int id = 1234;
		s = $"ID는 {id}입니다.";
제어문
	- 조건식은 모두 bool타입
	- 숫자는 안된다
	- switch문에서 문자열 비교가능